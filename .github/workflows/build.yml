name:  Publish to NPM

on:
  workflow_dispatch:
    inputs:
        version-type:
          type: choice
          description: Bump Version
          options: 
          - major
          - minor
          - patch

jobs:
  build:
    runs-on: ubuntu-latest
    name: Publish Package to npmjs
    if: startsWith(github.ref, 'refs/heads/release/')
    steps:
      - name: Fail if branch is not main
        if: (github.event_name == 'workflow_dispatch' && !startsWith(github.ref, 'refs/heads/release/'))
        run: |
          echo "This workflow should not be triggered with workflow_dispatch on a branch other than release"
          exit 1
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
      - uses: pnpm/action-setup@v3
        with:
          version: 8
      - run: pnpm install --frozen-lockfile
      - run: pnpm build
      - run: pnpm build:doc
      - run: |
          if [[ ${{ github.event.inputs.version-type }} == 'patch' ]]; then
            pnpm run increment-patch-version
          elif [[ ${{ github.event.inputs.version-type }} == 'minor' ]]; then
            pnpm run increment-minor-version
          elif [[ ${{ github.event.inputs.version-type }} == 'major' ]]; then
            pnpm run increment-major-version
          fi
      - run: pnpm publish --no-git-checks --access public ./build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Get Published Version
        id: get-version
        run: |
          echo "version=$(pnpm view @niuee/board version)" >> $GITHUB_OUTPUT
        shell: bash
      - name: Check the current version
        id: check-version
        run: |
          echo ${{ steps.get-version.outputs.version }}
          if [[ \"$(pnpm view @niuee/board version)\" == $(pnpm pkg get version)  ]]
            then
            echo "synced=True" >> $GITHUB_OUTPUT
           else
            echo "synced=False" >> $GITHUB_OUTPUT
          fi
          
        shell: bash
      - name: See if version is synced
        run: |
          echo ${{ steps.check-version.outputs.synced }}
      - name: Sync package version
        if: ${{ steps.check-version.outputs.synced == 'False' }}
        run: |
          pnpm run sync-package-version ${{ steps.get-version.outputs.version }}
          git config --global user.email "vntchang@gmail.com"
          git config --global user.name "niuee"
          git add package.json
          git commit -m "chore: bump ${{github.event.inputs.version-type}} version to ${{ steps.get-version.outputs.version }}"
          git push
      - name: Create release
        env:
          GH_TOKEN: ${{ secrets.PAT }}
          tag: ${{ format('{0}{1}', 'v', steps.get-version.outputs.version) }}
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${GITHUB_REPOSITORY#*/} ${tag#v}" \
              --generate-notes
              for file in ./dist/*; do
                gh release upload "$tag" "$file" --repo="$GITHUB_REPOSITORY"
              done