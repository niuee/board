{
    "Board": {
        "comment": {
            "summary": [],
            "blockTags": [
                {
                    "tag": "@category",
                    "content": [
                        {
                            "kind": "text",
                            "text": "Board"
                        }
                    ],
                    "skipRendering": false
                },
                {
                    "tag": "@translationBlock",
                    "content": [
                        {
                            "kind": "text",
                            "text": "Usage\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nimport { Board } from \"@niuee/board\";\n\n// however you prefer to get a canvas element that is already in the DOM\nconst canvasElement = document.querySelector(\"canvas\") as HTMLCanvasElement;\nconst board = new Board(canvasElement);\n\nconst stepFn = board.getStepFunction(); \nconst context = board.getContext();\n\nfunction step(timestamp: number){\n   stepFn(timestamp);\n// do other stuff after the board has stepped\n//.\n//.\n//.\n}\n```"
                        }
                    ],
                    "skipRendering": false
                },
                {
                    "tag": "@description",
                    "content": [
                        {
                            "kind": "text",
                            "text": "Alternatively you can import the board class as from a subdirectory; this shaves the bundle size a bit but not a lot though. As the board is the overall entry point for the library.\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```typescript\nimport {Board} from \"@niuee/board/boardify\";\n```"
                        }
                    ],
                    "skipRendering": false
                }
            ],
            "modifierTags": {}
        },
        "properties": {},
        "methods": {
            "setup": {
                "comment": {
                    "summary": [],
                    "blockTags": [
                        {
                            "tag": "@group",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "LifeCycle"
                                }
                            ],
                            "skipRendering": false
                        },
                        {
                            "tag": "@translationBlock",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This function is used to set up the board. It adds all the event listeners and starts the resize observer and the attribute observer."
                                }
                            ],
                            "skipRendering": false
                        }
                    ],
                    "modifierTags": {}
                }
            },
            "tearDown": {
                "comment": {
                    "summary": [],
                    "blockTags": [
                        {
                            "tag": "@group",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "LifeCycle"
                                }
                            ],
                            "skipRendering": false
                        },
                        {
                            "tag": "@translationBlock",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This function is used to clean up the board. It removes all the event listeners and disconnects the resize observer and the attribute observer."
                                }
                            ],
                            "skipRendering": false
                        }
                    ],
                    "modifierTags": {}
                }
            },
            "step": {
                "comment": {
                    "summary": [],
                    "blockTags": [
                        {
                            "tag": "@translationBlock",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This is the step function that is called in the animation frame. This function is responsible for updating the canvas context and the camera state."
                                }
                            ],
                            "skipRendering": false
                        }
                    ],
                    "modifierTags": {}
                }
            },
            "convertWindowPoint2WorldCoord": {
                "comment": {
                    "summary": [],
                    "blockTags": [
                        {
                            "tag": "@translationBlock",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Converts a point from window coordinates to world coordinates."
                                }
                            ],
                            "skipRendering": false
                        },
                        {
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "The converted point in world coordinates."
                                }
                            ],
                            "skipRendering": false
                        }
                    ],
                    "modifierTags": {}
                }
            },
            "on": {
                "comment": {
                    "summary": [],
                    "blockTags": [
                        {
                            "tag": "@translationBlock",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Add an camera movement event listener. The events are \"pan\", \"zoom\", and \"rotate\"."
                                }
                            ],
                            "skipRendering": false
                        },
                        {
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "The converted point in world coordinates."
                                }
                            ],
                            "skipRendering": false
                        }
                    ],
                    "modifierTags": {}
                }
            },
            "onInput": {
                "comment": {
                    "summary": [],
                    "blockTags": [
                        {
                            "tag": "@translationBlock",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Add an input event listener. The events are \"pan\", \"zoom\", and \"rotate\". This is different from the camera event listener as this is for input events. \nInput event does not necesarily mean that the camera will move. The input event is the event that is triggered when the user interacts with the board."
                                }
                            ],
                            "skipRendering": false
                        },
                        {
                            "tag": "@returns",
                            "content": [],
                            "skipRendering": false
                        }
                    ],
                    "modifierTags": {}
                }
            }
        },
        "accessors": {
            "width": {
                "setter": {
                    "comment": {
                        "summary": [],
                        "blockTags": [
                            {
                                "tag": "@description",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "This is in sync with the canvas width and the camera view port width. This is not the board's width.\nIf the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`limitEntireViewPort`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is set to true, the min zoom level is updated based on the width of the canvas."
                                    }
                                ],
                                "skipRendering": false
                            }
                        ],
                        "modifierTags": {}
                    }
                }
            },
            "height": {
                "setter": {
                    "comment": {
                        "summary": [],
                        "blockTags": [
                            {
                                "tag": "@translationBlock",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "This is in sync with the canvas height and the camera view port height. This is not the board's height.\nIf the limitEntireViewPort is set to true, the min zoom level is updated based on the height."
                                    }
                                ],
                                "skipRendering": false
                            }
                        ],
                        "modifierTags": {}
                    }
                }
            },
            "alignCoordinateSystem": {
                "setter": {
                    "comment": {
                        "summary": [],
                        "blockTags": [
                            {
                                "tag": "@translationBlock",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "This is an attribute that determines if the coordinate system should be aligned with the one of the HTML canvas element. The default is true."
                                    }
                                ],
                                "skipRendering": false
                            }
                        ],
                        "modifierTags": {}
                    }
                }
            },
            "fullScreen": {
                "getter": {
                    "comment": {
                        "summary": [],
                        "blockTags": [
                            {
                                "tag": "@translationBlock",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "Determines if the board should be full screen. If this is set to true, the width and height of the board will be set to the window's inner width and inner height respectively.\nIf set to true the width and height of the board will resize with the window."
                                    }
                                ],
                                "skipRendering": false
                            }
                        ],
                        "modifierTags": {}
                    }
                }
            },
            "context": {
                "getter": {
                    "comment": {
                        "summary": [],
                        "blockTags": [
                            {
                                "tag": "@translationBlock",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "The context used to draw stuff on the canvas."
                                    }
                                ],
                                "skipRendering": false
                            }
                        ],
                        "modifierTags": {}
                    }
                }
            },
            "limitEntireViewPort": {
                "setter": {
                    "comment": {
                        "summary": [],
                        "blockTags": [
                            {
                                "tag": "@translationBlock",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "Determines the behavior of the camera when the camera is at the edge of the boundaries. If set to true, the entire view port would not move beyond the boundaries.\nIf set to false, only the center of the camera is bounded by the boundaries."
                                    }
                                ],
                                "skipRendering": false
                            }
                        ],
                        "modifierTags": {}
                    }
                }
            },
            "kmtStrategy": {
                "setter": {
                    "comment": {
                        "summary": [],
                        "blockTags": [
                            {
                                "tag": "@translationBlock",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "The strategy used to handle the keyboard, mouse events. The default strategy is the DefaultBoardKMTStrategy. \nYou can implement your own strategy by implementing the BoardKMTStrategy interface."
                                    }
                                ],
                                "skipRendering": false
                            }
                        ],
                        "modifierTags": {}
                    }
                }
            },
            "touchStrategy": {
                "setter": {
                    "comment": {
                        "summary": [],
                        "blockTags": [
                            {
                                "tag": "@translationBlock",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "The strategy used to handle touch events. The default strategy is the DefaultTouchStrategy.\nYou can implement your own strategy by implementing the BoardTouchStrategy interface."
                                    }
                                ],
                                "skipRendering": false
                            }
                        ],
                        "modifierTags": {}
                    }
                }
            },
            "camera": {
                "getter": {
                    "comment": {
                        "summary": [],
                        "blockTags": [
                            {
                                "tag": "@translationBlock",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "The underlying camera of the board. The camera of the board can be switched.\nThe boundaries are based on camera. Meaning you can have camera with different boundaries, and you can switch between them during runtime."
                                    }
                                ],
                                "skipRendering": false
                            }
                        ],
                        "modifierTags": {}
                    }
                }
            },
            "maxHalfTransHeight": {
                "getter": {
                    "comment": {
                        "summary": [],
                        "blockTags": [
                            {
                                "tag": "@translationBlock",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "The max translation height of the camera. This is the maximum distance the camera can move in the vertical direction."
                                    }
                                ],
                                "skipRendering": false
                            }
                        ],
                        "modifierTags": {}
                    }
                }
            },
            "maxHalfTransWidth": {
                "getter": {
                    "comment": {
                        "summary": [],
                        "blockTags": [
                            {
                                "tag": "@translationBlock",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "The max translation width of the camera. This is the maximum distance the camera can move in the horizontal direction."
                                    }
                                ],
                                "skipRendering": false
                            }
                        ],
                        "modifierTags": {}
                    }
                }
            }
        }
    }
}